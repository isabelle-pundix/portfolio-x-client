/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { BalanceOfUtil, BalanceOfUtilInterface } from "../BalanceOfUtil";

const _abi = [
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "uint256[]",
        name: "",
        internalType: "uint256[]",
      },
    ],
    name: "getBalances",
    inputs: [
      {
        type: "address[]",
        name: "tokenAddressesArr",
        internalType: "address[]",
      },
      {
        type: "address",
        name: "userAddress",
        internalType: "address",
      },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "address",
        name: "",
        internalType: "address",
      },
    ],
    name: "multicallAddress",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "address",
        name: "",
        internalType: "address",
      },
    ],
    name: "owner",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "renounceOwnership",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "transferOwnership",
    inputs: [
      {
        type: "address",
        name: "newOwner",
        internalType: "address",
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "updateMulticallAddress",
    inputs: [
      {
        type: "address",
        name: "_addr",
        internalType: "address",
      },
    ],
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        type: "address",
        name: "previousOwner",
        indexed: true,
      },
      {
        type: "address",
        name: "newOwner",
        indexed: true,
      },
    ],
    anonymous: false,
  },
] as const;

export class BalanceOfUtil__factory {
  static readonly abi = _abi;
  static createInterface(): BalanceOfUtilInterface {
    return new Interface(_abi) as BalanceOfUtilInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BalanceOfUtil {
    return new Contract(address, _abi, runner) as unknown as BalanceOfUtil;
  }
}
